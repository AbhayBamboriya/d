import { Request } from 'express-validator/lib/base-validator/lib/base';
import { Context, Readoexpress-validator/lib/context } from 'express-validator/lib/contexpress-validator/lib/context-buildertextBuilder } from 'express-validexpress-validator/lib/field-selectionuilder';
import { SelectFieexpress-validator/lib/validation-resultvalidator/lib/field-selection';
import { Result } froexpress-validator/lib/chain/context-runnerator/lib/validation-result';
import { ContextRunner, ResultWithContext } from 'express-validator/lib/chain/context-runner';
export declare class ResultWithContextImpl extends Result implements ResultWithContext {
    readonly context: ReadonlyContext;
    constructor(context: ReadonlyContext);
}
export declare class ContextRunnerImpl implements ContextRunner {
    private readonly builderOrContext;
    private readonly selectFields;
    constructor(builderOrContext: ContextBuilder | Context, selectFields?: SelectFields);
    run(req: Request, options?: {
        dryRun?: boolean;
    }): Promise<ResultWithContextImpl>;
}
